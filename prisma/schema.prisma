// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  // Fields ---------------------------------------
  id        Int       @default(autoincrement()) @id
  name      String
  lastName  String?
  email     String    @unique
  password  String
  role      Role      @default(EMPLOYEE)
  createdAt DateTime  @default(now())
  updatedAt DateTime?

  // Prisma references ----------------------------
}


enum Role {
  ADMIN
  EMPLOYEE
}


model Product {
  // Fields ---------------------------------------------------------------------------------------------------
  id              Int       @default(autoincrement()) @id
  manufacturerId  Int?
  name            String    @unique
  description     String?
  unitPrice       Float
  stock           Int       @default(0)
  minStock        Int       @default(0)
  createdAt       DateTime  @default(now())
  updatedAt       DateTime?

  // Prisma references ----------------------------------------------------------------------------------------
  manufacturer          Manufacturer?                     @relation(fields: [manufacturerId], references: [id])
  booleanFields         BooleanProductField[]
  stringFields          StringProductField[]
  quantityFields        QuantityProductField[]
  fractionFields        FractionProductField[]
  productOffers         ProductOffer[]
  assortedProductOffers ProductsOnAssortedProductOffers[]
}


model Manufacturer {
  // Fields ---------------------------------------
  id        Int       @default(autoincrement()) @id
  name      String    @unique
  createdAt DateTime  @default(now())
  updatedAt DateTime?

  // Prisma references ----------------------------
  products  Product[]
}


model BooleanProductField {
  // Fields --------------------------------------------------------
  productId Int
  name      String
  value     Boolean

  // Prisma references ---------------------------------------------
  product   Product @relation(fields: [productId], references: [id])

  @@id([productId, name])
}


model StringProductField {
  // Fields --------------------------------------------------------
  productId Int
  name      String
  value     String

  // Prisma references ---------------------------------------------
  product   Product @relation(fields: [productId], references: [id])

  @@id([productId, name])
}


model QuantityProductField {
  // Fields ----------------------------------------------------------
  productId   Int
  name        String
  value       Float
  metricUnit  String

  // Prisma references -----------------------------------------------
  product     Product @relation(fields: [productId], references: [id])

  @@id([productId, name])
}


model FractionProductField {
  // Fields ----------------------------------------------------------------
  productId         Int
  name              String
  numeratorValue    Int
  denominatorValue  Int
  metricUnit        String

  // Prisma references -----------------------------------------------------
  product           Product @relation(fields: [productId], references: [id])

  @@id([productId, name])
}


model ProductOffer {
  // Fields --------------------------------------------------------
  id        Int       @default(autoincrement()) @id
  productId Int
  quantity  Int       @default(1)
  newPrice  Float
  deadline  DateTime
  closed    Boolean   @default(false)
  createdAt DateTime  @default(now())
  updatedAt DateTime?

  // Prisma references ---------------------------------------------
  product   Product @relation(fields: [productId], references: [id])
}


model AssortedProductOffer {
  // Fields ---------------------------------------
  id        Int       @default(autoincrement()) @id
  newPrice  Float
  deadline  DateTime
  closed    Boolean   @default(false)
  createdAt DateTime  @default(now())
  updatedAt DateTime?

  // Prisma references ----------------------------
  products  ProductsOnAssortedProductOffers[]
}


model ProductsOnAssortedProductOffers {
  // Fields -----------------------------------------------------------------------------------------------
  productId               Int
  assortedProductOfferId  Int
  quantity                Int @default(1)

  // Prisma references ------------------------------------------------------------------------------------
  product               Product               @relation(fields: [productId], references: [id])
  assortedProductOffer  AssortedProductOffer  @relation(fields: [assortedProductOfferId], references: [id])

  @@id([productId, assortedProductOfferId])
}
